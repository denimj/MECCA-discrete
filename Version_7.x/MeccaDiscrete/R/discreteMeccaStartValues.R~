discreteMeccaStartValues <-
function(calibrationOutput, phy, tipStates, tolerance = 0.01, plsComponents) {
	
	m <- match(phy$tip.label, rownames(tipStates))
	tipStates <- tipStates[m,]
	
	obs <- tipStates[,1]/rowSums(tipStates) ## Proportion of number of species with state 1 in the clade tips.
		
	stdobs <- obs # observed stats for standardization and pls
	
	bdcal <- as.matrix(calibrationOutput$calResBD) ## Birth and death proposals.
	bmcal <- as.matrix(calibrationOutput$calResChar) ## q12, q21 and proportions.
	
	Ncomp <- ncol(plsComponents) # gives the number of PLS components
	Nsims <- nrow(bdcal)

	bdretained <- bdcal[sort(bdcal[,3]), ][seq(1, Nsims * tolerance), ] # retained diversification parameters ## This is holding only the percentage of 'tolerance' best likelihood MLE for mu and lambda.
		
	obsPLS <- numeric(Ncomp)
	
	#print(length(stdobs))
	#print(length(plsComponents[, 1]))
	
	for(i in 1:length(obsPLS)) {	
		obsPLS[i] <- sum(stdobs * plsComponents[, i])
		} # creates the pls adjusted observed data -> WAT?
	print("done")
	
	plsSim <- matrix(NA, nrow = Nsims, ncol = Ncomp)
	params <- bmcal[ , 1:2]
	stats <- bmcal[ , -(1:2)]
	
	for(i in 1:Nsims) {
		plsSim[i, ] <- extractpls(stats[i,], plsComponents, Ncomp) ## this needs adjusting for different numbers of pls components
		} ## now this holds the pls adjusted distances
	
	dmat <- numeric(Nsims)

	for (i in 1:Nsims) {
		dmat[i] <- dist(rbind(obsPLS, plsSim[i, ]))
		} # computes the euclidean distances for the simulations
	
	pdmat <- cbind(params, dmat)
	bmretained <- pdmat[order(pdmat[,3]),][seq(1, Nsims * tolerance) , ] ## The euclidean distance is the equivalet of the likelihood used to retain the best MLE of mu and lambda.
	
	## and now we compute the starting values (mean) and proposal width (sd) for the MCMC ##
		
	startingQ12 <- mean(bmretained[,1])  ## takes the mean of the prior values of sigma that resulted in variances within our distance 
	widthQ12 <- sd(bmretained[,1])  ## takes the sd of the prior values of sigma that resulted in variances within our distance
	startingQ21 <- mean(bmretained[,2]) 
	widthQ21 <- sd(bmretained[,2])
	
	startingB <- mean(bdretained[,1])
	widthB <- sd(bdretained[,1])
	startingD <- mean(bdretained[,2])  ## mean of prior death rates giving good taxa
	widthD <- sd(bdretained[,2])  ## sd of prior death rates giving good taxa

	return(list("startingQ12" = startingQ12, "widthQ12" = widthQ12, "startingQ21"= startingQ21, "widthQ21" = widthQ21,"startingB" = startingB, "widthB" = widthB, "startingD" = startingD, "widthD" = widthD, "dcrit" = max(bmretained[,3]), "obsTraits" = obs, "plsObserved" = obsPLS, "plsLoadings" = plsComponents))
	## dcrit is the best value among the euclidean distances of matrixes simulated and observed.
	}
